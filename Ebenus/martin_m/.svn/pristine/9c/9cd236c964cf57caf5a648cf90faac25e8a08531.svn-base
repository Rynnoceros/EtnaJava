/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cours.ebenus.dao.impl;

import com.cours.ebenus.dao.IRoleDao;
import com.cours.ebenus.dao.annotations.TableName;
import com.cours.ebenus.dao.entities.Role;
import com.cours.ebenus.utils.Constants;

import java.util.List;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author ElHadji
 */
public class RoleDao extends AbstractDao<Role> implements IRoleDao {

    private static final Log log = LogFactory.getLog(RoleDao.class);

    private RoleDao() {
        super(Role.class);
    }
    
    private static class RoleDaoHolder {
    	private static final RoleDao instance = new RoleDao();
    }
    
    public static RoleDao getInstance() {
    	return RoleDaoHolder.instance;
    }

    @Override
    public List<Role> findAllRoles() {
        return super.findByCriteria(Constants.SELECT_ALL_ROLE, new String[] {}, new String[] {});
    }

    @Override
    public Role findRoleById(int idRole) {
        List<Role> roles = super.findByCriteria(Constants.SELECT_ROLE_BY_ROLE, new String[] {"idRole"}, new String[] {String.valueOf(idRole)});
        if (roles != null) {
        	return roles.get(0);
        } else {
        	return null;
        }
    }

    @Override
    public List<Role> findRoleByIdentifiant(String identifiantRole) {
        return super.findByCriteria(Constants.SELECT_ROLE_BY_IDENTIFIANT, new String[] {"identifiant"}, new String[] {identifiantRole});
    }

    @Override
    public Role createRole(Role role) {
    	Role toCreate = null;
    	if (role != null) {
    		List<Role> toFind = findRoleByIdentifiant(role.getIdentifiant());
    		if (toFind == null || toFind.size() <= 0) {
    			role.setVersion(1);
    			toCreate = super.create(role);
    		} else {
    			log.error(String.format(Constants.ERROR_MSG_ROLE_EXISTING, role.getIdentifiant()));
    		}
    	}
    	return toCreate;
    }

    @Override
    public Role updateRole(Role role) {
        return super.update(role);
    }

    @Override
    public boolean deleteRole(Role role) {
        return super.delete(role);
    }
}
